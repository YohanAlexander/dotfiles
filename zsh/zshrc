# Fig pre block. Keep at the top of this file.
[[ -f "$HOME/.fig/shell/zshrc.pre.zsh" ]] && builtin source "$HOME/.fig/shell/zshrc.pre.zsh"

# If you come from bash you might have to change your $PATH.
export PATH=/usr/local/bin:/usr/bin:$HOME/bin:$PATH

# Path to your oh-my-zsh installation.
export ZSH="$HOME/.oh-my-zsh"

# Set name of the theme to load --- if set to "random", it will
# load a random theme each time oh-my-zsh is loaded, in which case,
# to know which specific one was loaded, run: echo $RANDOM_THEME
# See https://github.com/robbyrussell/oh-my-zsh/wiki/Themes
ZSH_THEME="spaceship"

# Set list of themes to pick from when loading at random
# Setting this variable when ZSH_THEME=random will cause zsh to load
# a theme from this variable instead of looking in $HOME/.oh-my-zsh/themes/
# If set to an empty array, this variable will have no effect.
# ZSH_THEME_RANDOM_CANDIDATES=( "robbyrussell" "agnoster" )

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion.
# Case-sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
# DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to change how often to auto-update (in days).
# export UPDATE_ZSH_DAYS=13

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# You can set one of the optional three formats:
# "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# or set a custom format using the strftime function format specifications,
# see 'man strftime' for details.
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load?
# Standard plugins can be found in $HOME/.oh-my-zsh/plugins/*
# Custom plugins may be added to $HOME/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(git sudo fzf-tab autojump zsh-syntax-highlighting zsh-completions)
source $HOME/.zsh-syntax-highlighting.sh
source $ZSH/oh-my-zsh.sh
source $HOME/.forgit.plugin.zsh
export GOBIN=$HOME/go/bin && export PATH=$PATH:$HOME/go/bin
enable-fzf-tab && autoload -U compinit && compinit

# User configurations
SPACESHIP_TIME_SHOW="true"
SPACESHIP_EXIT_CODE_SHOW="true"

# export MANPATH="/usr/local/man:$MANPATH"
# You may need to manually set your language environment
export LANG=en_US.UTF-8
export LC_MESSAGES="C"

# Preferred editor for local and remote sessions
if [[ -n $SSH_CONNECTION ]]; then
    export EDITOR="nvim"
else
    export EDITOR="nvim"
fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
# Example aliases
# alias zshconfig="mate $HOME/.zshrc"
# alias ohmyzsh="mate $HOME/.oh-my-zsh"

# >>> Dotfiles initialize >>>
# !! Contents within this block are managed by 'Dotfiles init' !!
    alias cat="bat"
    alias pip="/usr/local/bin/pip3"
    alias python="/usr/local/bin/python3"
    export MANPAGER="sh -c 'col -bx | bat -l man -p'"
    TIMEFMT=$"\n================\nCPU\t%P\nuser\t%*Us\nsystem\t%*Ss\ntotal\t%*Es\nmemory\t%MMB"
# <<< Dotfiles initialize <<<

# >>> Kitty initialize >>>
# !! Contents within this block are managed by 'Kitty init' !!
    alias ssh="kitty +kitten ssh"
    alias icat="kitty +kitten icat"
    alias diff="kitty +kitten diff"
    alias emoji="kitty +kitten unicode_input"
    alias hg="kitty +kitten hyperlinked_grep"
# <<< Kitty initialize <<<

# >>> Docker initialize >>>
# !! Contents within this block are managed by 'Docker init' !!
    alias runc="bash $HOME/dotfiles/fzf/docker.sh runc"
    alias stopc="bash $HOME/dotfiles/fzf/docker.sh stopc"
    alias runinc="bash $HOME/dotfiles/fzf/docker.sh runinc"
    alias showipc="bash $HOME/dotfiles/fzf/docker.sh showipc"
# <<< Docker initialize <<<

# >>> Git initialize >>>
# !! Contents within this block are managed by 'Git init' !!
    alias gdiff="git difftool --no-symlinks --dir-diff"
    export FORGIT_COPY_CMD="xclip -selection clipboard"
    export FORGIT_CHECKOUT_BRANCH_BRANCH_GIT_OPTS="--sort=-committerdate"
    export FORGIT_FZF_DEFAULT_OPTS="
        --exact
        --border
        --cycle
        --reverse
        --height '80%'
    "
    export FORGIT_STASH_FZF_OPTS='
        --bind="del:reload(git stash drop $(cut -d: -f1 <<<{}) 1>/dev/null && git stash list)"
        --bind="enter:reload(git stash pop $(cut -d: -f1 <<<{}) 1>/dev/null && git stash list)"
    '
# <<< Git initialize <<<

# >>> FZF initialize >>>
# !! Contents within this block are managed by 'FZF init' !!
    [ -f $HOME/.fzf.zsh ] && source $HOME/.fzf.zsh
    export FZF_DEFAULT_OPTS="
        --extended
        --color=fg:#f8f8f2,bg:#282a36,hl:#bd93f9
        --color=fg+:#f8f8f2,bg+:#44475a,hl+:#bd93f9
        --color=info:#ffb86c,prompt:#50fa7b,pointer:#ff79c6
        --color=marker:#ff79c6,spinner:#ffb86c,header:#6272a4
    "
    export FZF_DEFAULT_COMMAND="fd --type file --follow --hidden --exclude .git --color=always"
    export FZF_CTRL_T_OPTS="--ansi"
    export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"
# <<< FZF initialize <<<

# >>> conda initialize >>>
# !! Contents within this block are managed by 'conda init' !!
__conda_setup="$('/usr/bin/conda' 'shell.zsh' 'hook' 2> /dev/null)"
if [ $? -eq 0 ]; then
    eval "$__conda_setup"
else
    if [ -f "/usr/etc/profile.d/conda.sh" ]; then
        . "/usr/etc/profile.d/conda.sh"
    else
        export PATH=/usr/local/bin:/usr/bin:$HOME/bin:$PATH
    fi
fi
unset __conda_setup
# <<< conda initialize <<<

test -e "${HOME}/.iterm2_shell_integration.zsh" && source "${HOME}/.iterm2_shell_integration.zsh"

eval "$(direnv hook zsh)"

# Fig post block. Keep at the bottom of this file.
[[ -f "$HOME/.fig/shell/zshrc.post.zsh" ]] && builtin source "$HOME/.fig/shell/zshrc.post.zsh"
